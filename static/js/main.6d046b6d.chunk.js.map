{"version":3,"sources":["AppContext.js","components/screen/Block.js","components/screen/Blocks.js","components/screen/Wall.js","common/useAppContext.js","components/screen/index.js","components/option-panel/color-picker/index.js","components/option-panel/mini-map/Block.js","components/option-panel/mini-map/Blocks.js","components/option-panel/mini-map/Walls.js","components/option-panel/mini-map/index.js","components/option-panel/buttons/ResetButton.js","components/option-panel/buttons/SaveButton.js","components/option-panel/buttons/LoadButton.js","components/option-panel/buttons/ImageDownloadButton.js","components/option-panel/buttons/index.js","components/option-panel/index.js","App.js","index.js"],"names":["generateBlocks","blocks","block","Array","fill","map","r","g","b","a","generateBlock","createDefaultWalls","createContext","walls","trigger","setWalls","resetWalls","Block","backgroundColor","className","style","Blocks","screenBlocks","idx","Wall","id","useAppContext","useContext","AppContext","Screen","presetColors","ColorPicker","color","onChange","wallId","blocksId","handleMouseEnter","useCallback","e","buttons","handleMouseDown","onMouseEnter","onMouseDown","Walls","MiniMap","ctx","key","push","ResetButton","onClick","window","confirm","SaveButton","ref","useRef","type","data","title","date","Date","encoded","encodeURIComponent","JSON","stringify","href","current","setAttribute","click","download","visibility","LoadButton","accept","files","target","length","file","reader","FileReader","onload","result","parse","alert","readAsText","ImageDownloadButton","handleDownload","toPng","document","querySelector","dataUrl","console","error","Buttons","OptionPanel","onChangeColor","visible","createUpdateBlock","App","useState","showConfig","setShowConfig","setColor","fillType","setFillType","fillDefault","blockId","newBlocks","c","splice","code","useEffect","handler","prev","addEventListener","preventDefault","returnValue","removeEventListener","useShowConfigPanelEffect","keyDownHandler","keyUpHandler","useSetFillTypeEffect","provideValue","hasOwnProperty","Error","clicked","find","_","updated","fillRow","newWalls","fillColumn","Provider","value","rgb","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d046b6d.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst generateBlock = block => new Array(block)\n  .fill(0)\n  .map(() => ({ r: 255, g: 255, b: 255, a: 0, fill: false }))\n\nconst generateBlocks = (blocks, block) => new Array(blocks)\n  .fill(0)\n  .map(() => generateBlock(block))\n\nexport const createDefaultWalls = () => ({\n  'left-wall': generateBlocks(8, 13),\n  'center-wall': generateBlocks(8, 23),\n  'right-wall': generateBlocks(8, 12),\n})\n\nexport default createContext({\n  walls: createDefaultWalls(),\n  trigger: () => {},\n  setWalls: () => {},\n  resetWalls: () => {},\n})","function Block({ block }) {\n  const {r, g, b, a} = block\n\n  const backgroundColor = `rgba(${r}, ${g}, ${b}, ${a})`\n\n  return (\n    <div className=\"block\">\n      <div className=\"block-overlay\" style={{backgroundColor}} />\n      <div className=\"block-image\" />\n    </div>\n  )\n}\n\nexport default Block","import Block from './Block'\n\nfunction Blocks({ blocks }) {\n  const screenBlocks = blocks.map((block, idx) => (\n    <Block key={idx} block={block} />\n  ))\n\n  return (\n    <div className=\"blocks\">{screenBlocks}</div>\n  )\n}\n\nexport default Blocks","import Blocks from './Blocks'\n\nfunction Wall({ id, blocks }) {\n  const screenBlocks = blocks.map((blocks, idx) => (\n    <Blocks key={idx} blocks={blocks} />\n  ))\n\n  return (\n    <div className=\"wall-wrapper\" id={id}>\n      {screenBlocks}\n    </div>\n  )\n}\n\nexport default Wall","import { useContext } from 'react'\nimport AppContext from '../AppContext'\n\nexport const useAppContext = () => useContext(AppContext)","import Wall from './Wall'\nimport { useAppContext } from '../../common/useAppContext'\n\nfunction Screen() {\n  const { walls } = useAppContext()\n\n  return (\n    <div id=\"wrap\">\n      <div className=\"background\" id=\"ground\" />\n      <div id=\"walls\">\n        <Wall id=\"center-wall\" blocks={walls['center-wall']} />\n        <Wall id=\"left-wall\" blocks={walls['left-wall']} />\n        <Wall id=\"right-wall\" blocks={walls['right-wall']} />\n      </div>\n\n      <div className=\"background\" id=\"pillars\" />\n    </div>\n  )\n}\n\nexport default Screen","import { SketchPicker } from 'react-color'\n\nconst presetColors = [\n  '#D0021B80',\n  '#F5A62380',\n  '#F8E71C80',\n  '#8B572A80',\n  '#7ED32180',\n  '#41750580',\n  '#BD10E080',\n  '#9013FE80',\n  '#4A90E280',\n  '#50E3C280',\n  '#B8E98680',\n  '#00000080',\n  '#4A4A4A80',\n  '#9B9B9B80',\n  '#FFFFFF80',\n]\n\nfunction ColorPicker({ color, onChange }) {\n  return (\n    <section>\n      <SketchPicker\n        color={color}\n        onChange={onChange}\n        presetColors={presetColors}\n      />\n    </section>\n  )\n}\n\nexport default ColorPicker","import { useCallback } from 'react'\n\nfunction Block({ wallId, blocksId, id, color, trigger }) {\n  const {r, g, b, a} = color\n\n  const backgroundColor = `rgba(${r},${g},${b},${a})`\n\n  const handleMouseEnter = useCallback(e => {\n    if (e.buttons !== 1) {\n      return\n    }\n\n    trigger(wallId, blocksId, id)\n  }, [wallId, blocksId, id, trigger])\n\n  const handleMouseDown = useCallback(() => {\n    trigger(wallId, blocksId, id)\n  }, [wallId, blocksId, id, trigger])\n\n  return (\n    <div\n      className=\"mini-map-block\"\n      style={{backgroundColor}}\n      onMouseEnter={handleMouseEnter}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n\nexport default Block","import Block from './Block'\nimport { useAppContext } from '../../../common/useAppContext'\n\nfunction Blocks({ wallId, blocksId, blocks }) {\n  const { trigger } = useAppContext()\n\n  const b = blocks.map((color, idx) => (\n    <Block\n      key={idx}\n      wallId={wallId}\n      blocksId={blocksId}\n      id={idx}\n      color={color}\n      trigger={trigger}\n    />\n  ))\n\n  return (\n    <div className=\"mini-map-blocks\">{b}</div>\n  )\n}\n\nexport default Blocks","import Blocks from './Blocks'\n\nfunction Walls({ id, blocks }) {\n  const b = blocks.map((blocks, idx) => (\n    <Blocks\n      key={idx}\n      wallId={id}\n      blocksId={idx}\n      blocks={blocks}\n    />\n  ))\n\n  return (\n    <div className=\"mini-map-walls\">{b}</div>\n  )\n}\n\nexport default Walls","import Walls from './Walls'\nimport { useAppContext } from '../../../common/useAppContext'\nimport './index.css'\n\nfunction MiniMap() {\n  const ctx = useAppContext()\n  const walls = []\n\n  for (const key in ctx.walls) {\n    walls.push(<Walls key={key} id={key} blocks={ctx.walls[key]} />)\n  }\n\n  return (\n    <section>{walls}</section>\n  )\n}\n\nexport default MiniMap\n","import { useAppContext } from '../../../common/useAppContext'\n\nfunction ResetButton() {\n  const { resetWalls } = useAppContext()\n\n  const handleOnClick = () => {\n    const ok = window.confirm('현재 벽에 적용된 색상을 초기화 하시겠어요?')\n    if (!ok) {\n      return\n    }\n\n    resetWalls()\n  }\n\n  return (\n    <button onClick={handleOnClick}>칠해진 벽 색상 초기화</button>\n  )\n}\n\nexport default ResetButton","import { useRef } from 'react'\nimport { useAppContext } from '../../../common/useAppContext'\n\nfunction SaveButton() {\n  const { walls } = useAppContext()\n  const ref = useRef()\n\n  const handleSave = () => {\n    const data = [\n      {\n        title: 'noname',\n        date: new Date(),\n        walls,\n      },\n    ]\n\n    const encoded = encodeURIComponent(JSON.stringify(data))\n\n    const href = `data:application/json;charset=utf-8,${encoded}`\n\n    ref.current.setAttribute('href', href)\n    ref.current.click()\n  }\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleSave}>저장</button>\n      <a download=\"save.json\" ref={ref} style={{visibility: 'hidden'}}/>\n    </>\n  )\n}\n\nexport default SaveButton","import { useAppContext } from '../../../common/useAppContext'\n\nfunction LoadButton() {\n  const { setWalls } = useAppContext()\n\n  const handleChange = e => {\n    const { files } = e.target\n\n    if (files.length === 0) {\n      return\n    }\n\n    const file = files[0]\n    const reader = new FileReader()\n\n    reader.onload = e => {\n      const { result } = e.target\n\n      try {\n        const json = JSON.parse(result)\n        const { walls } = json[0]\n\n        setWalls(walls)\n\n      } catch (e) {\n        alert('파일을 읽을 수 없습니다.. ㅠ_ㅠ 파일이 깨진 것 같습니다.')\n      }\n    }\n\n    reader.readAsText(file)\n  }\n\n  return (\n    <input\n      accept=\"application/json\"\n      type=\"file\"\n      onChange={handleChange}\n    />\n  )\n}\n\nexport default LoadButton","import { useRef } from 'react'\nimport { toPng } from 'html-to-image'\n\nfunction ImageDownloadButton() {\n  const ref = useRef()\n\n  const handleDownload = async () => {\n    try {\n      const dataUrl = await toPng(document.querySelector('#wrap'))\n\n      ref.current.setAttribute('href', dataUrl)\n      ref.current.click()\n\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleDownload}>이미지 다운로드</button>\n      <a download=\"image.png\" ref={ref} style={{visibility: 'hidden'}}/>\n    </>\n  )\n}\n\nexport default ImageDownloadButton","import ResetButton from './ResetButton'\nimport SaveButton from './SaveButton'\nimport LoadButton from './LoadButton'\nimport ImageDownloadButton from './ImageDownloadButton'\nimport './index.css'\n\nfunction Buttons() {\n  return (\n    <section id=\"buttons\">\n      <ResetButton />\n      <LoadButton />\n      <SaveButton />\n      <ImageDownloadButton />\n    </section>\n  )\n}\n\nexport default Buttons","import ColorPicker from './color-picker'\nimport MiniMap from './mini-map'\nimport Buttons from './buttons'\nimport './index.css'\n\nfunction OptionPanel({ color, onChangeColor, visible }) {\n  return (\n    <div className={visible ? '' : 'hide'} id=\"option\">\n      <MiniMap />\n      <ColorPicker\n        color={color}\n        onChange={onChangeColor}\n      />\n      <Buttons />\n    </div>\n  )\n}\n\nexport default OptionPanel","import { useEffect, useState } from 'react'\nimport './App.css'\nimport AppContext, { createDefaultWalls } from './AppContext'\nimport Screen from './components/screen'\nimport OptionPanel from './components/option-panel'\n\nconst FILL_TYPE_DEFAULT = 0\nconst FILL_TYPE_ROW = 1\nconst FILL_TYPE_COLUMN = 2\n\nconst isSameColor = (a, b) => a.r === b.r\n  && a.g === b.g\n  && a.b === b.b\n  && a.a === b.a\n\nconst createUpdateBlock = (target, color) => {\n  // 색깔이 채워져 있지 않은 상태면 채운다\n  if (!target.fill) {\n    return { ...color, fill: true }\n  }\n\n  // 색깔이 채워져 있는 경우\n  // 같은 색인지 확인하고\n  // 같은 색이면 색깔을 지운다\n  if (isSameColor(target, color)) {\n    return { ...target, a: 0, fill: false }\n  }\n\n  // 이전과 다른 색이면 색깔 바꾼다.\n  return { ...color, fill: true }\n}\n\nconst useShowConfigPanelEffect = (setShowConfig, code = 'KeyQ') => useEffect(() => {\n  const handler = e => {\n    if (e.code !== code) {\n      return\n    }\n\n    setShowConfig(prev => !prev)\n  }\n\n  window.addEventListener('keydown', handler)\n  window.addEventListener('beforeunload', e => {\n    e.preventDefault()\n\n    e.returnValue = ''\n  })\n\n  return () => {\n    window.removeEventListener('keydown', handler)\n  }\n}, [setShowConfig, code])\n\nconst useSetFillTypeEffect = setFillType => useEffect(() => {\n  const keyDownHandler = e => {\n    switch (e.key) {\n      case 'Shift':\n        setFillType(FILL_TYPE_ROW)\n        return\n\n      case 'Alt':\n        setFillType(FILL_TYPE_COLUMN)\n        return\n\n      default:\n        setFillType(FILL_TYPE_DEFAULT)\n    }\n  }\n\n  const keyUpHandler = () => {\n    setFillType(FILL_TYPE_DEFAULT)\n  }\n\n  window.addEventListener('keydown', keyDownHandler)\n  window.addEventListener('keyup', keyUpHandler)\n\n  return () => {\n    window.removeEventListener('keydown', keyDownHandler)\n    window.removeEventListener('keyup', keyUpHandler)\n  }\n}, [setFillType])\n\nfunction App() {\n  const [walls, setWalls] = useState(createDefaultWalls())\n  const [showConfig, setShowConfig] = useState(false)\n  const [color, setColor] = useState({\n    r: 0, g: 0, b: 0, a: .5,\n  })\n  const [fillType, setFillType] = useState(FILL_TYPE_DEFAULT)\n\n  const handleChangeColor = color => {\n    setColor(color.rgb)\n  }\n\n  const fillDefault = (wallId, blocksId, blockId) => {\n    const blocks = walls[wallId]\n    const newBlocks = blocks[blocksId].map((c, idx) => {\n      if (idx !== blockId) {\n        return c\n      }\n\n      return createUpdateBlock(c, color)\n    })\n\n    blocks.splice(blocksId, 1, newBlocks)\n\n    setWalls({...walls})\n  }\n\n  const fillRow = (wallId, blocksId, blockId) => {\n    const blocks = walls[wallId]\n    const clicked = blocks[blocksId].find((_, idx) => idx === blockId)\n    const updated = createUpdateBlock(clicked, color)\n\n    const newBlocks = blocks[blocksId]\n      .map(() => ({ ...updated }))\n\n    blocks.splice(blocksId, 1, newBlocks)\n\n    setWalls({...walls})\n  }\n\n  const fillColumn = (wallId, blocksId, blockId) => {\n    const blocks = walls[wallId]\n    const clicked = blocks[blocksId].find((_, idx) => idx === blockId)\n    const updated = createUpdateBlock(clicked, color)\n\n    const newBlocks = blocks\n      .map(b => b.map((block, idx) => {\n        if (idx !== blockId) {\n          return block\n        }\n\n        return { ...updated }\n      }))\n\n    const newWalls = { ...walls }\n    newWalls[wallId] = newBlocks\n\n    setWalls(newWalls)\n  }\n\n  const trigger = (wallId, blocksId, blockId) => {\n    if (!walls.hasOwnProperty(wallId)) {\n      throw new Error(`${wallId} 값이 존재하지 않습니다.`)\n    }\n\n    switch (fillType) {\n      case FILL_TYPE_DEFAULT:\n        fillDefault(wallId, blocksId, blockId)\n        return\n\n      case FILL_TYPE_ROW:\n        fillRow(wallId, blocksId, blockId)\n        return\n\n      case FILL_TYPE_COLUMN:\n        fillColumn(wallId, blocksId, blockId)\n        return\n\n      default:\n        fillDefault(wallId, blocksId, blockId)\n    }\n  }\n\n  const resetWalls = () => {\n    setWalls(createDefaultWalls())\n  }\n\n  useShowConfigPanelEffect(setShowConfig, 'KeyQ')\n  useSetFillTypeEffect(setFillType)\n\n  const provideValue = {\n    walls,\n    trigger,\n    setWalls,\n    resetWalls,\n  }\n\n  return (\n    <AppContext.Provider value={provideValue}>\n      <Screen\n        color={color}\n      />\n      <OptionPanel\n        color={color}\n        onChangeColor={handleChangeColor}\n        visible={showConfig}\n      />\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}