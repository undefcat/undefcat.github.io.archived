{"version":3,"sources":["AppContext.js","components/screen/Block.js","components/screen/Blocks.js","components/screen/Wall.js","components/screen/index.js","components/option-panel/color-picker/index.js","components/option-panel/mini-map/Block.js","components/option-panel/mini-map/Blocks.js","components/option-panel/mini-map/Walls.js","components/option-panel/mini-map/index.js","components/option-panel/index.js","App.js","index.js"],"names":["generateBlocks","blocks","block","Array","fill","map","r","g","b","a","generateBlock","defaultWalls","createContext","walls","setWall","Block","backgroundColor","className","style","Blocks","screenBlocks","idx","Wall","id","Screen","useContext","AppContext","presetColors","ColorPicker","color","onChange","wallId","blocksId","handleMouseEnter","useCallback","e","buttons","handleMouseDown","onMouseEnter","onMouseDown","Walls","MiniMap","ctx","key","push","OptionPanel","onChangeColor","visible","App","useState","setWalls","showConfig","setShowConfig","setColor","useEffect","handler","code","prev","window","addEventListener","removeEventListener","Provider","value","blockId","hasOwnProperty","Error","newBlocks","c","splice","rgb","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.015e9d65.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst generateBlock = block => new Array(block)\n  .fill(0)\n  .map(() => ({ r: 255, g: 255, b: 255, a: 0, fill: false }))\n\nconst generateBlocks = (blocks, block) => new Array(blocks)\n  .fill(0)\n  .map(() => generateBlock(block))\n\nexport const defaultWalls = {\n  'left-wall': generateBlocks(8, 13),\n  'center-wall': generateBlocks(8, 23),\n  'right-wall': generateBlocks(8, 12),\n}\n\nexport default createContext({\n  walls: defaultWalls,\n  setWall: () => {},\n})","function Block({ block }) {\n  const {r, g, b, a} = block\n\n  const backgroundColor = `rgba(${r}, ${g}, ${b}, ${a})`\n\n  return (\n    <div className=\"block\">\n      <div className=\"block-overlay\" style={{backgroundColor}} />\n      <div className=\"block-image\" />\n    </div>\n  )\n}\n\nexport default Block","import Block from './Block'\n\nfunction Blocks({ blocks }) {\n  const screenBlocks = blocks.map((block, idx) => (\n    <Block key={idx} block={block} />\n  ))\n\n  return (\n    <div className=\"blocks\">{screenBlocks}</div>\n  )\n}\n\nexport default Blocks","import Blocks from './Blocks'\n\nfunction Wall({ id, blocks }) {\n  const screenBlocks = blocks.map((blocks, idx) => (\n    <Blocks key={idx} blocks={blocks} />\n  ))\n\n  return (\n    <div className=\"wall-wrapper\" id={id}>\n      {screenBlocks}\n    </div>\n  )\n}\n\nexport default Wall","import { useContext } from 'react'\nimport Wall from './Wall'\nimport AppContext from '../../AppContext'\n\nfunction Screen() {\n  const { walls } = useContext(AppContext)\n\n  return (\n    <div id=\"wrap\">\n      <div className=\"background\" id=\"ground\" />\n      <div id=\"walls\">\n        <Wall id=\"center-wall\" blocks={walls['center-wall']} />\n        <Wall id=\"left-wall\" blocks={walls['left-wall']} />\n        <Wall id=\"right-wall\" blocks={walls['right-wall']} />\n      </div>\n\n      <div className=\"background\" id=\"pillars\" />\n    </div>\n  )\n}\n\nexport default Screen","import { SketchPicker } from 'react-color'\n\nconst presetColors = [\n  '#D0021B80',\n  '#F5A62380',\n  '#F8E71C80',\n  '#8B572A80',\n  '#7ED32180',\n  '#41750580',\n  '#BD10E080',\n  '#9013FE80',\n  '#4A90E280',\n  '#50E3C280',\n  '#B8E98680',\n  '#00000080',\n  '#4A4A4A80',\n  '#9B9B9B80',\n  '#FFFFFF80',\n]\n\nfunction ColorPicker({ color, onChange }) {\n  return (\n    <section>\n      <SketchPicker\n        color={color}\n        onChange={onChange}\n        presetColors={presetColors}\n      />\n    </section>\n  )\n}\n\nexport default ColorPicker","import { useCallback } from 'react'\n\nfunction Block({ wallId, blocksId, id, color, setWall }) {\n  const {r, g, b, a} = color\n\n  const backgroundColor = `rgba(${r},${g},${b},${a})`\n\n  const handleMouseEnter = useCallback(e => {\n    if (e.buttons !== 1) {\n      return\n    }\n\n    setWall(wallId, blocksId, id)\n  }, [wallId, blocksId, id, setWall])\n\n  const handleMouseDown = useCallback(() => {\n    setWall(wallId, blocksId, id)\n  }, [wallId, blocksId, id, setWall])\n\n  return (\n    <div\n      className=\"mini-map-block\"\n      style={{backgroundColor}}\n      onMouseEnter={handleMouseEnter}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n\nexport default Block","import { useContext } from 'react'\nimport Block from './Block'\nimport AppContext from '../../../AppContext'\n\nfunction Blocks({ wallId, blocksId, blocks }) {\n  const { setWall } = useContext(AppContext)\n\n  const b = blocks.map((color, idx) => (\n    <Block\n      key={idx}\n      wallId={wallId}\n      blocksId={blocksId}\n      id={idx}\n      color={color}\n      setWall={setWall}\n    />\n  ))\n\n  return (\n    <div className=\"mini-map-blocks\">{b}</div>\n  )\n}\n\nexport default Blocks","import Blocks from './Blocks'\n\nfunction Walls({ id, blocks }) {\n  const b = blocks.map((blocks, idx) => (\n    <Blocks\n      key={idx}\n      wallId={id}\n      blocksId={idx}\n      blocks={blocks}\n    />\n  ))\n\n  return (\n    <div className=\"mini-map-walls\">{b}</div>\n  )\n}\n\nexport default Walls","import { useContext } from 'react'\nimport AppContext from '../../../AppContext'\nimport Walls from './Walls'\nimport './index.css'\n\nfunction MiniMap() {\n  const ctx = useContext(AppContext)\n  const walls = []\n\n  for (const key in ctx.walls) {\n    walls.push(<Walls key={key} id={key} blocks={ctx.walls[key]} />)\n  }\n\n  return (\n    <section>{walls}</section>\n  )\n}\n\nexport default MiniMap\n","import ColorPicker from './color-picker'\nimport MiniMap from './mini-map'\nimport './index.css'\n\nfunction OptionPanel({ color, onChangeColor, visible }) {\n  return (\n    <div className={visible ? '' : 'hide'} id=\"option\">\n      <MiniMap />\n      <ColorPicker\n        color={color}\n        onChange={onChangeColor}\n      />\n    </div>\n  )\n}\n\nexport default OptionPanel","import { useEffect, useState } from 'react'\nimport './App.css'\nimport AppContext, { defaultWalls } from './AppContext'\nimport Screen from './components/screen'\nimport OptionPanel from './components/option-panel'\n\nfunction App() {\n  const [walls, setWalls] = useState(defaultWalls)\n  const [showConfig, setShowConfig] = useState(false)\n  const [color, setColor] = useState({\n    r: 0, g: 0, b: 0, a: .5,\n  })\n\n  const handleChangeColor = color => {\n    setColor(color.rgb)\n  }\n\n  const setWall = (wallId, blocksId, blockId) => {\n    if (!walls.hasOwnProperty(wallId)) {\n      throw new Error(`${wallId} 값이 존재하지 않습니다.`)\n    }\n\n    const blocks = walls[wallId]\n    const newBlocks = blocks[blocksId].map((c, idx) => {\n      if (idx !== blockId) {\n        return c\n      }\n\n      // 색깔이 채워져 있지 않은 상태면 채운다\n      if (!c.fill) {\n        return { ...color, fill: true }\n      }\n\n      const isSame = (c.r === color.r)\n        && (c.g === color.g)\n        && (c.b === color.b)\n        && (c.a === color.a)\n\n      // 색깔이 채워져 있는 경우\n      // 같은 색인지 확인하고\n      // 같은 색이면 색깔을 지운다\n      if (isSame) {\n        return { ...c, a: 0, fill: false }\n      }\n\n      // 이전과 다른 색이면 색깔 바꾼다.\n      return { ...color }\n    })\n\n    blocks.splice(blocksId, 1, newBlocks)\n\n    setWalls({...walls})\n  }\n\n  useEffect(() => {\n    const handler = e => {\n      if (e.code !== 'KeyQ') {\n        return\n      }\n\n      setShowConfig(prev => !prev)\n    }\n\n    window.addEventListener('keydown', handler)\n\n    return () => {\n      window.removeEventListener('keydown', handler)\n    }\n\n  }, [])\n\n  return (\n    <AppContext.Provider value={{ walls, setWall }}>\n      <Screen\n        color={color}\n      />\n      <OptionPanel\n        color={color}\n        onChangeColor={handleChangeColor}\n        visible={showConfig}\n      />\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}