{"version":3,"sources":["AppContext.js","components/screen/Block.js","components/screen/Blocks.js","components/screen/Wall.js","components/screen/information/index.js","common/useAppContext.js","components/screen/index.js","components/option-panel/color-panel/mini-map/Block.js","components/option-panel/color-panel/mini-map/Blocks.js","components/option-panel/color-panel/mini-map/Walls.js","components/option-panel/color-panel/mini-map/index.js","components/option-panel/color-panel/color-picker/index.js","components/option-panel/buttons/ResetButton.js","components/option-panel/color-panel/index.js","store/state/information/index.js","components/option-panel/information/Input.js","components/option-panel/information/index.js","components/option-panel/index.js","components/fab/DownloadButton.js","components/fab/index.js","App.js","store/index.js","index.js"],"names":["generateBlocks","blocks","block","Array","fill","map","r","g","b","a","generateBlock","createDefaultWalls","createContext","walls","trigger","setWalls","resetWalls","Block","backgroundColor","className","style","Blocks","screenBlocks","idx","Wall","id","informationSelector","state","information","Information","info","useSelector","balju","sigong","name","address","useAppContext","useContext","AppContext","Screen","wallId","blocksId","color","handleMouseEnter","useCallback","e","buttons","handleMouseDown","onMouseEnter","onMouseDown","Walls","MiniMap","ctx","key","push","colors","ColorPicker","onChange","ResetButton","onClick","window","confirm","ColorPanel","informationSlice","createSlice","initialState","reducers","change","action","payload","value","actions","Input","placeholder","dispatch","useDispatch","valueSelector","type","target","OptionPanel","onChangeColor","visible","exact","to","activeClassName","path","DownloadButton","ref","useRef","useState","downloading","setDownloading","handleDownload","toPng","document","querySelector","dataUrl","current","setAttribute","click","console","error","alert","tooltip","icon","download","visibility","Fab","toggleConfigPanel","createUpdateBlock","App","showConfig","setShowConfig","setColor","fillType","setFillType","fillDefault","blockId","newBlocks","c","splice","code","useEffect","handler","prev","addEventListener","preventDefault","returnValue","removeEventListener","useShowConfigPanelEffect","keyDownHandler","keyUpHandler","useSetFillTypeEffect","provideValue","hasOwnProperty","Error","clicked","find","_","updated","fillRow","newWalls","fillColumn","Provider","rgb","configureStore","reducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.c1beb74e.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nconst generateBlock = block => new Array(block)\r\n  .fill(0)\r\n  .map(() => ({ r: 255, g: 255, b: 255, a: 0, fill: false }))\r\n\r\nconst generateBlocks = (blocks, block) => new Array(blocks)\r\n  .fill(0)\r\n  .map(() => generateBlock(block))\r\n\r\nexport const createDefaultWalls = () => ({\r\n  'left-wall': generateBlocks(8, 13),\r\n  'center-wall': generateBlocks(8, 23),\r\n  'right-wall': generateBlocks(8, 12),\r\n})\r\n\r\nexport default createContext({\r\n  walls: createDefaultWalls(),\r\n  trigger: () => {},\r\n  setWalls: () => {},\r\n  resetWalls: () => {},\r\n})","function Block({ block }) {\r\n  const {r, g, b, a} = block\r\n\r\n  const backgroundColor = `rgba(${r}, ${g}, ${b}, ${a})`\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"block-overlay\" style={{backgroundColor}} />\r\n      <div className=\"block-image\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Block","import Block from './Block'\r\n\r\nfunction Blocks({ blocks }) {\r\n  const screenBlocks = blocks.map((block, idx) => (\r\n    <Block key={idx} block={block} />\r\n  ))\r\n\r\n  return (\r\n    <div className=\"blocks\">{screenBlocks}</div>\r\n  )\r\n}\r\n\r\nexport default Blocks","import Blocks from './Blocks'\r\n\r\nfunction Wall({ id, blocks }) {\r\n  const screenBlocks = blocks.map((blocks, idx) => (\r\n    <Blocks key={idx} blocks={blocks} />\r\n  ))\r\n\r\n  return (\r\n    <div className=\"wall-wrapper\" id={id}>\r\n      {screenBlocks}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wall","import { useSelector } from 'react-redux'\r\nimport './index.css'\r\n\r\nconst informationSelector = state => state.information\r\n\r\nfunction Information() {\r\n  const info = useSelector(informationSelector)\r\n\r\n  return (\r\n    <div id=\"information\">\r\n      <div className=\"up\">\r\n        <div className=\"item title\">발주사</div>\r\n        <div className=\"item content\">{info.balju}</div>\r\n        <div className=\"item title\">시공사</div>\r\n        <div className=\"item content\">{info.sigong}</div>\r\n        <div className=\"item title\">현장명</div>\r\n        <div className=\"item content\">{info.name}</div>\r\n        <div className=\"item title\">주 소</div>\r\n        <div className=\"item content address\">{info.address}</div>\r\n      </div>\r\n      <div className=\"down\">\r\n        <div className=\"item employer\" />\r\n        <div className=\"item warning\">※ 본 시안은 출력기와 모니터에 따라 실제 색상과 다소 차이가 있을 수 있습니다.</div>\r\n        <div className=\"item logo\">\r\n          <div className=\"logo-image\" />\r\n        </div>\r\n        <div className=\"item manager\">\r\n          <div className=\"manager-top\">\r\n            <div className=\"manager manager-grade\">담 당 자: 엄 계 현</div>\r\n          </div>\r\n          <div className=\"manager-bottom\">010 - 5424 - 7740</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Information","import { useContext } from 'react'\r\nimport AppContext from '../AppContext'\r\n\r\nexport const useAppContext = () => useContext(AppContext)","import Wall from './Wall'\r\nimport Information from './information'\r\nimport { useAppContext } from '../../common/useAppContext'\r\n\r\nfunction Screen() {\r\n  const { walls } = useAppContext()\r\n\r\n  return (\r\n    <div id=\"wrap\">\r\n      <div className=\"background\" id=\"ground\" />\r\n      <div id=\"walls\">\r\n        <Wall id=\"center-wall\" blocks={walls['center-wall']} />\r\n        <Wall id=\"left-wall\" blocks={walls['left-wall']} />\r\n        <Wall id=\"right-wall\" blocks={walls['right-wall']} />\r\n      </div>\r\n\r\n      <div className=\"background\" id=\"pillars\" />\r\n\r\n      <Information />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Screen","import { useCallback } from 'react'\r\n\r\nfunction Block({ wallId, blocksId, id, color, trigger }) {\r\n  const {r, g, b, a} = color\r\n\r\n  const backgroundColor = `rgba(${r},${g},${b},${a})`\r\n\r\n  const handleMouseEnter = useCallback(e => {\r\n    if (e.buttons !== 1) {\r\n      return\r\n    }\r\n\r\n    trigger(wallId, blocksId, id)\r\n  }, [wallId, blocksId, id, trigger])\r\n\r\n  const handleMouseDown = useCallback(() => {\r\n    trigger(wallId, blocksId, id)\r\n  }, [wallId, blocksId, id, trigger])\r\n\r\n  return (\r\n    <div\r\n      className=\"mini-map-block\"\r\n      style={{backgroundColor}}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseDown={handleMouseDown}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Block","import Block from './Block'\r\nimport { useAppContext } from '../../../../common/useAppContext'\r\n\r\nfunction Blocks({ wallId, blocksId, blocks }) {\r\n  const { trigger } = useAppContext()\r\n\r\n  const b = blocks.map((color, idx) => (\r\n    <Block\r\n      key={idx}\r\n      wallId={wallId}\r\n      blocksId={blocksId}\r\n      id={idx}\r\n      color={color}\r\n      trigger={trigger}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <div className=\"mini-map-blocks\">{b}</div>\r\n  )\r\n}\r\n\r\nexport default Blocks","import Blocks from './Blocks'\r\n\r\nfunction Walls({ id, blocks }) {\r\n  const b = blocks.map((blocks, idx) => (\r\n    <Blocks\r\n      key={idx}\r\n      wallId={id}\r\n      blocksId={idx}\r\n      blocks={blocks}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <div className=\"mini-map-walls\">{b}</div>\r\n  )\r\n}\r\n\r\nexport default Walls","import Walls from './Walls'\r\nimport { useAppContext } from '../../../../common/useAppContext'\r\nimport './index.css'\r\n\r\nfunction MiniMap() {\r\n  const ctx = useAppContext()\r\n  const walls = []\r\n\r\n  for (const key in ctx.walls) {\r\n    walls.push(<Walls key={key} id={key} blocks={ctx.walls[key]} />)\r\n  }\r\n\r\n  return (\r\n    <section>{walls}</section>\r\n  )\r\n}\r\n\r\nexport default MiniMap\r\n","import { CirclePicker } from 'react-color'\r\nimport './index.css'\r\n\r\nconst colors = [\r\n  '#877B6780',\r\n  '#B2A59280',\r\n  '#CDC1AE80',\r\n  '#A6251080',\r\n  '#A1221080',\r\n  '#DFBAB980',\r\n  '#CF5D1780',\r\n  '#D0844F80',\r\n  '#D8AE8D80',\r\n  '#8E688B80',\r\n  '#B091AB80',\r\n  '#CCB5C380',\r\n  '#2C823F80',\r\n  '#76B79480',\r\n  '#A5CEAF80',\r\n  '#2F427A7F',\r\n  '#6798B980',\r\n  '#A7BDC480',\r\n]\r\n\r\nfunction ColorPicker({ color, onChange }) {\r\n  return (\r\n    <section id=\"color-picker\">\r\n      <CirclePicker\r\n        color={color}\r\n        colors={colors}\r\n        onChange={onChange}\r\n      />\r\n      <p>Shift + 클릭: 행 색칠</p>\r\n      <p>Alt + 클릭: 열 색칠</p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ColorPicker","import { useAppContext } from '../../../common/useAppContext'\r\n\r\nfunction ResetButton() {\r\n  const { resetWalls } = useAppContext()\r\n\r\n  const handleOnClick = () => {\r\n    const ok = window.confirm('현재 벽에 적용된 색상을 초기화 하시겠어요?')\r\n    if (!ok) {\r\n      return\r\n    }\r\n\r\n    resetWalls()\r\n  }\r\n\r\n  return (\r\n    <button onClick={handleOnClick}>칠해진 벽 색상 초기화</button>\r\n  )\r\n}\r\n\r\nexport default ResetButton","import MiniMap from './mini-map'\r\nimport ColorPicker from './color-picker'\r\nimport ResetButton from '../buttons/ResetButton'\r\n\r\nfunction ColorPanel({ color, onChange }) {\r\n  return (\r\n    <>\r\n      <MiniMap />\r\n      <ColorPicker\r\n        color={color}\r\n        onChange={onChange}\r\n      />\r\n      <ResetButton />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ColorPanel","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst informationSlice = createSlice({\r\n  name: 'information',\r\n  initialState: {\r\n    balju: '',\r\n    sigong: '',\r\n    name: '',\r\n    address: '',\r\n  },\r\n\r\n  reducers: {\r\n    change(state, action) {\r\n      const { name, value } = action.payload\r\n\r\n      state[name] = value\r\n    }\r\n  }\r\n})\r\n\r\nexport const { change } = informationSlice.actions\r\n\r\nexport default informationSlice.reducer","import { useDispatch, useSelector } from 'react-redux'\r\nimport { change } from '../../../store/state/information'\r\n\r\nconst valueSelector = name => state => state.information[name]\r\n\r\nfunction Input({ name, placeholder }) {\r\n  const dispatch = useDispatch()\r\n  const value = useSelector(valueSelector(name))\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder={placeholder}\r\n      onChange={e => dispatch(change({ name, value: e.target.value }))}\r\n      value={value}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input","import Input from './Input'\r\n\r\nfunction Information() {\r\n  return (\r\n    <>\r\n      <Input\r\n        name=\"balju\"\r\n        placeholder=\"발주사\"\r\n      />\r\n      <Input\r\n        name=\"sigong\"\r\n        placeholder=\"시공사\"\r\n      />\r\n      <Input\r\n        name=\"name\"\r\n        placeholder=\"현장명\"\r\n      />\r\n      <Input\r\n        name=\"address\"\r\n        placeholder=\"주소\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Information","import { Switch, Route, NavLink } from 'react-router-dom'\r\nimport ColorPanel from './color-panel'\r\nimport Information from './information'\r\nimport './index.css'\r\n\r\nfunction OptionPanel({ color, onChangeColor, visible }) {\r\n  return (\r\n    <div className={visible ? '' : 'hide'} id=\"option\">\r\n      <div className=\"menus\">\r\n        <NavLink exact to=\"/\" activeClassName=\"active\">벽 색칠</NavLink>\r\n        <NavLink to=\"/information\" activeClassName=\"active\">틀 정보</NavLink>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <ColorPanel\r\n            color={color}\r\n            onChange={onChangeColor}\r\n          />\r\n        </Route>\r\n        <Route path=\"/information\">\r\n          <Information />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OptionPanel","import { useRef, useState } from 'react'\r\nimport { Button } from 'react-floating-action-button'\r\nimport { toPng } from 'html-to-image'\r\n\r\nfunction DownloadButton() {\r\n  const ref = useRef()\r\n  const [downloading, setDownloading] = useState(false)\r\n\r\n  const handleDownload = async () => {\r\n    if (downloading) {\r\n      return\r\n    }\r\n\r\n    setDownloading(true)\r\n\r\n    try {\r\n      const dataUrl = await toPng(document.querySelector('#wrap'))\r\n\r\n      ref.current.setAttribute('href', dataUrl)\r\n      ref.current.click()\r\n\r\n      setDownloading(false)\r\n\r\n    } catch (e) {\r\n      console.error(e)\r\n      alert('다운로드 오류!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"fab-button-item\"\r\n        tooltip=\"다운로드\"\r\n        onClick={handleDownload}\r\n        icon={`fas ${downloading ? 'fa-spinner fa-spin' : 'fa-save'}`}\r\n      />\r\n      <a download=\"image.png\" ref={ref} style={{visibility: 'hidden'}}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DownloadButton","import { Button, Container } from 'react-floating-action-button'\r\nimport DownloadButton from './DownloadButton'\r\n\r\nfunction Fab({ toggleConfigPanel }) {\r\n  return (\r\n    <Container className=\"fab-button\">\r\n      <DownloadButton />\r\n      <Button\r\n        className=\"fab-button-item\"\r\n        tooltip=\"옵션패널\"\r\n        icon=\"fas fa-tools\"\r\n        onClick={toggleConfigPanel}\r\n      />\r\n      <Button\r\n        tooltip=\"메뉴\"\r\n        icon=\"fas fa-bars\"\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Fab","import { useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport AppContext, { createDefaultWalls } from './AppContext'\r\nimport Screen from './components/screen'\r\nimport OptionPanel from './components/option-panel'\r\nimport Fab from './components/fab'\r\n\r\nconst FILL_TYPE_DEFAULT = 0\r\nconst FILL_TYPE_ROW = 1\r\nconst FILL_TYPE_COLUMN = 2\r\n\r\nconst isSameColor = (a, b) => a.r === b.r\r\n  && a.g === b.g\r\n  && a.b === b.b\r\n  && a.a === b.a\r\n\r\nconst createUpdateBlock = (target, color) => {\r\n  // 색깔이 채워져 있지 않은 상태면 채운다\r\n  if (!target.fill) {\r\n    return { ...color, fill: true }\r\n  }\r\n\r\n  // 색깔이 채워져 있는 경우\r\n  // 같은 색인지 확인하고\r\n  // 같은 색이면 색깔을 지운다\r\n  if (isSameColor(target, color)) {\r\n    return { ...target, a: 0, fill: false }\r\n  }\r\n\r\n  // 이전과 다른 색이면 색깔 바꾼다.\r\n  return { ...color, fill: true }\r\n}\r\n\r\nconst useShowConfigPanelEffect = (setShowConfig, code) => useEffect(() => {\r\n  const handler = e => {\r\n    if (e.code !== code) {\r\n      return\r\n    }\r\n\r\n    setShowConfig(prev => !prev)\r\n  }\r\n\r\n  window.addEventListener('keydown', handler)\r\n  window.addEventListener('beforeunload', e => {\r\n    e.preventDefault()\r\n\r\n    e.returnValue = ''\r\n  })\r\n\r\n  return () => {\r\n    window.removeEventListener('keydown', handler)\r\n  }\r\n}, [setShowConfig, code])\r\n\r\nconst useSetFillTypeEffect = setFillType => useEffect(() => {\r\n  const keyDownHandler = e => {\r\n    switch (e.key) {\r\n      case 'Shift':\r\n        setFillType(FILL_TYPE_ROW)\r\n        return\r\n\r\n      case 'Alt':\r\n        setFillType(FILL_TYPE_COLUMN)\r\n        return\r\n\r\n      default:\r\n        setFillType(FILL_TYPE_DEFAULT)\r\n    }\r\n  }\r\n\r\n  const keyUpHandler = () => {\r\n    setFillType(FILL_TYPE_DEFAULT)\r\n  }\r\n\r\n  window.addEventListener('keydown', keyDownHandler)\r\n  window.addEventListener('keyup', keyUpHandler)\r\n\r\n  return () => {\r\n    window.removeEventListener('keydown', keyDownHandler)\r\n    window.removeEventListener('keyup', keyUpHandler)\r\n  }\r\n}, [setFillType])\r\n\r\nfunction App() {\r\n  const [walls, setWalls] = useState(createDefaultWalls())\r\n  const [showConfig, setShowConfig] = useState(false)\r\n  const [color, setColor] = useState({\r\n    r: 0, g: 0, b: 0, a: .5,\r\n  })\r\n  const [fillType, setFillType] = useState(FILL_TYPE_DEFAULT)\r\n\r\n  const handleChangeColor = color => {\r\n    setColor(color.rgb)\r\n  }\r\n\r\n  const fillDefault = (wallId, blocksId, blockId) => {\r\n    const blocks = walls[wallId]\r\n    const newBlocks = blocks[blocksId].map((c, idx) => {\r\n      if (idx !== blockId) {\r\n        return c\r\n      }\r\n\r\n      return createUpdateBlock(c, color)\r\n    })\r\n\r\n    blocks.splice(blocksId, 1, newBlocks)\r\n\r\n    setWalls({...walls})\r\n  }\r\n\r\n  const fillRow = (wallId, blocksId, blockId) => {\r\n    const blocks = walls[wallId]\r\n    const clicked = blocks[blocksId].find((_, idx) => idx === blockId)\r\n    const updated = createUpdateBlock(clicked, color)\r\n\r\n    const newBlocks = blocks[blocksId]\r\n      .map(() => ({ ...updated }))\r\n\r\n    blocks.splice(blocksId, 1, newBlocks)\r\n\r\n    setWalls({...walls})\r\n  }\r\n\r\n  const fillColumn = (wallId, blocksId, blockId) => {\r\n    const blocks = walls[wallId]\r\n    const clicked = blocks[blocksId].find((_, idx) => idx === blockId)\r\n    const updated = createUpdateBlock(clicked, color)\r\n\r\n    const newBlocks = blocks\r\n      .map(b => b.map((block, idx) => {\r\n        if (idx !== blockId) {\r\n          return block\r\n        }\r\n\r\n        return { ...updated }\r\n      }))\r\n\r\n    const newWalls = { ...walls }\r\n    newWalls[wallId] = newBlocks\r\n\r\n    setWalls(newWalls)\r\n  }\r\n\r\n  const trigger = (wallId, blocksId, blockId) => {\r\n    if (!walls.hasOwnProperty(wallId)) {\r\n      throw new Error(`${wallId} 값이 존재하지 않습니다.`)\r\n    }\r\n\r\n    switch (fillType) {\r\n      case FILL_TYPE_DEFAULT:\r\n        fillDefault(wallId, blocksId, blockId)\r\n        return\r\n\r\n      case FILL_TYPE_ROW:\r\n        fillRow(wallId, blocksId, blockId)\r\n        return\r\n\r\n      case FILL_TYPE_COLUMN:\r\n        fillColumn(wallId, blocksId, blockId)\r\n        return\r\n\r\n      default:\r\n        fillDefault(wallId, blocksId, blockId)\r\n    }\r\n  }\r\n\r\n  const resetWalls = () => {\r\n    setWalls(createDefaultWalls())\r\n  }\r\n\r\n  useShowConfigPanelEffect(setShowConfig, 'Escape')\r\n  useSetFillTypeEffect(setFillType)\r\n\r\n  const provideValue = {\r\n    walls,\r\n    trigger,\r\n    setWalls,\r\n    resetWalls,\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider value={provideValue}>\r\n      <Screen\r\n        color={color}\r\n      />\r\n      <OptionPanel\r\n        color={color}\r\n        onChangeColor={handleChangeColor}\r\n        visible={showConfig}\r\n      />\r\n      <Fab\r\n        toggleConfigPanel={() => setShowConfig(!showConfig)}\r\n      />\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport information from './state/information'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    information,\r\n  },\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { MemoryRouter as Router } from 'react-router-dom'\r\nimport './index.css'\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}